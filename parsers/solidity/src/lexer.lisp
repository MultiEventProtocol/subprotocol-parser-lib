;; Copyright Â© 2021-2022 Glukhov Mikhail. All rights reserved. Licensed
;; under the GNU AGPLv3
(in-package #:solipsism)

(defmacro def-lex (var-name &body body)
  (let ((res))
    (dolist (item body)
      (push `(,(car item) (return (values ,@(cdr item)))) res))
    `(define-string-lexer ,var-name
       ,@(reverse res))))

;; (print
;;  (macroexpand-1 '(def-lex sol-lexer
;;                   ("\"([^\\\"]|\\.)*?\"" '%string (string-trim "\"" $@))
;;                   ("true" '%true 'true)
;;                   ("false" '%false 'false))))

;; =>
;; (DEFINE-STRING-LEXER SOL-LEXER
;;   ("\"([^\\\"]|\\.)*?\"" (RETURN (VALUES '%STRING (STRING-TRIM "\"" $@))))
;;   ("true" (RETURN (VALUES '%TRUE 'TRUE)))
;;   ("false" (RETURN (VALUES '%FALSE 'FALSE))))

(def-lex sol-lexer
  ;; ("//(.*)" (return (values '%comment $@)))
  ;; ("(?s)/\\*(.*)\\*/" (values 'multiline-comment $@)) ;; TODO

  ;; lexer_tokens here
  ("\\bimport\\b" '%import 'import)
  ("\\bas\\b" '%as 'as)
  ("\\from\\b" '%from 'from)
  ("\\bconstant\\b" '%constant 'constant)
  ("\\bpragma\\s+([^;]|\\.)*;" '%pragma (subseq $@ 7))
  ("\\blibrary\\b" '%library 'library)
  ("\\busing\\b" '%using 'using)
  ("\\bevent\\b" '%event 'event)
  ("\\banonymous\\b" '%anonymous 'anonymous)
  ("\\bindexed\\b" '%indexed 'indexed)
  ("\\benum\\b" '%enum 'enum)
  ("\\bcontract\\b" '%contract 'contract)
  ("\\babstract\\b" '%abstract 'abstract)
  ("\\bis\\b" '%is 'is)
  ("\\." '|%.| '|%.|)
  (","   '|%,| '|,|)
  ("{"   '|%{| '{)
  ("}"   '|%}| '})
  (":" '|%:| '|:|)
  ("\\(" '|%(| '|(|)
  ("\\)" '|%)| '|)|)
  ("\\bfunction\\b" '%function 'function)
  (";" '|%;| '|;|)
  ("\\bmemory\\b" '%data-location 'memory)
  ("\\bstorage\\b" '%data-location 'storage)
  ("\\bcalldata\\b" '%data-location 'calldata)
  ("\\breturns\\b" '%returns 'returns)
  ("\\binternal\\b" '%visibility 'internal)
  ("\\bexternal\\b" '%visibility 'external)
  ("\\bprivate\\b"  '%visibility 'private)
  ("\\bpublic\\b"   '%visibility 'public)
  ("\\bpure\\b" '%pure 'pure)
  ("\\bview\\b" '%view 'view)
  ("\\bpayable\\b" '%payable 'payable)
  ("\\bvirtual\\b" '%virtual 'virtual)
  ("\\boverride" '%override '%override)
  ("[=]{1}[>]{1}" '|%=>| '|=>|)
  ("\\bmapping\\b" '%mapping 'mapping)
  ("\\buint\\b" '%unsigned-integer-type 'uint)
  ("\\buint8\\b" '%unsigned-integer-type 'uint8)
  ("\\buint16\\b" '%unsigned-integer-type 'uint16)
  ("\\buint24\\b" '%unsigned-integer-type 'uint24)
  ("\\buint32\\b" '%unsigned-integer-type 'uint32)
  ("\\buint40\\b" '%unsigned-integer-type 'uint40)
  ("\\buint48\\b" '%unsigned-integer-type 'uint48)
  ("\\buint56\\b" '%unsigned-integer-type 'uint56)
  ("\\buint64\\b" '%unsigned-integer-type 'uint64)
  ("\\buint72\\b" '%unsigned-integer-type 'uint72)
  ("\\buint80\\b" '%unsigned-integer-type 'uint80)
  ("\\buint88\\b" '%unsigned-integer-type 'uint88)
  ("\\buint96\\b" '%unsigned-integer-type 'uint96)
  ("\\buint104\\b" '%unsigned-integer-type 'uint104)
  ("\\buint112\\b" '%unsigned-integer-type 'uint112)
  ("\\buint120\\b" '%unsigned-integer-type 'uint120)
  ("\\buint128\\b" '%unsigned-integer-type 'uint128)
  ("\\buint136\\b" '%unsigned-integer-type 'uint136)
  ("\\buint144\\b" '%unsigned-integer-type 'uint144)
  ("\\buint152\\b" '%unsigned-integer-type 'uint152)
  ("\\buint160\\b" '%unsigned-integer-type 'uint160)
  ("\\buint168\\b" '%unsigned-integer-type 'uint168)
  ("\\buint176\\b" '%unsigned-integer-type 'uint176)
  ("\\buint184\\b" '%unsigned-integer-type 'uint184)
  ("\\buint192\\b" '%unsigned-integer-type 'uint192)
  ("\\buint200\\b" '%unsigned-integer-type 'uint200)
  ("\\buint208\\b" '%unsigned-integer-type 'uint208)
  ("\\buint216\\b" '%unsigned-integer-type 'uint216)
  ("\\buint224\\b" '%unsigned-integer-type 'uint224)
  ("\\buint232\\b" '%unsigned-integer-type 'uint232)
  ("\\buint240\\b" '%unsigned-integer-type 'uint240)
  ("\\buint248\\b" '%unsigned-integer-type 'uint248)
  ("\\buint256\\b" '%unsigned-integer-type 'uint256)
  ("\\bint\\b" '%signed-integer-type 'int)
  ("\\bint8\\b" '%signed-integer-type 'int8)
  ("\\bint16\\b" '%signed-integer-type 'int16)
  ("\\bint24\\b" '%signed-integer-type 'int24)
  ("\\bint32\\b" '%signed-integer-type 'int32)
  ("\\bint40\\b" '%signed-integer-type 'int40)
  ("\\bint48\\b" '%signed-integer-type 'int48)
  ("\\bint56\\b" '%signed-integer-type 'int56)
  ("\\bint64\\b" '%signed-integer-type 'int64)
  ("\\bint72\\b" '%signed-integer-type 'int72)
  ("\\bint80\\b" '%signed-integer-type 'int80)
  ("\\bint88\\b" '%signed-integer-type 'int88)
  ("\\bint96\\b" '%signed-integer-type 'int96)
  ("\\bint104\\b" '%signed-integer-type 'int104)
  ("\\bint112\\b" '%signed-integer-type 'int112)
  ("\\bint120\\b" '%signed-integer-type 'int120)
  ("\\bint128\\b" '%signed-integer-type 'int128)
  ("\\bint136\\b" '%signed-integer-type 'int136)
  ("\\bint144\\b" '%signed-integer-type 'int144)
  ("\\bint152\\b" '%signed-integer-type 'int152)
  ("\\bint160\\b" '%signed-integer-type 'int160)
  ("\\bint168\\b" '%signed-integer-type 'int168)
  ("\\bint176\\b" '%signed-integer-type 'int176)
  ("\\bint184\\b" '%signed-integer-type 'int184)
  ("\\bint192\\b" '%signed-integer-type 'int192)
  ("\\bint200\\b" '%signed-integer-type 'int200)
  ("\\bint208\\b" '%signed-integer-type 'int208)
  ("\\bint216\\b" '%signed-integer-type 'int216)
  ("\\bint224\\b" '%signed-integer-type 'int224)
  ("\\bint232\\b" '%signed-integer-type 'int232)
  ("\\bint240\\b" '%signed-integer-type 'int240)
  ("\\bint248\\b" '%signed-integer-type 'int248)
  ("\\bint256\\b" '%signed-integer-type 'int256)
  ("\\bbytes1\\b" '%fixed-bytes 'bytes1)
  ("\\bbytes2\\b" '%fixed-bytes 'bytes2)
  ("\\bbytes3\\b" '%fixed-bytes 'bytes3)
  ("\\bbytes4\\b" '%fixed-bytes 'bytes4)
  ("\\bbytes5\\b" '%fixed-bytes 'bytes5)
  ("\\bbytes6\\b" '%fixed-bytes 'bytes6)
  ("\\bbytes7\\b" '%fixed-bytes 'bytes7)
  ("\\bbytes8\\b" '%fixed-bytes 'bytes8)
  ("\\bbytes9\\b" '%fixed-bytes 'bytes9)
  ("\\bbytes10\\b" '%fixed-bytes 'bytes10)
  ("\\bbytes11\\b" '%fixed-bytes 'bytes11)
  ("\\bbytes12\\b" '%fixed-bytes 'bytes12)
  ("\\bbytes13\\b" '%fixed-bytes 'bytes13)
  ("\\bbytes14\\b" '%fixed-bytes 'bytes14)
  ("\\bbytes15\\b" '%fixed-bytes 'bytes15)
  ("\\bbytes16\\b" '%fixed-bytes 'bytes16)
  ("\\bbytes17\\b" '%fixed-bytes 'bytes17)
  ("\\bbytes18\\b" '%fixed-bytes 'bytes18)
  ("\\bbytes19\\b" '%fixed-bytes 'bytes19)
  ("\\bbytes20\\b" '%fixed-bytes 'bytes20)
  ("\\bbytes21\\b" '%fixed-bytes 'bytes21)
  ("\\bbytes22\\b" '%fixed-bytes 'bytes22)
  ("\\bbytes23\\b" '%fixed-bytes 'bytes23)
  ("\\bbytes24\\b" '%fixed-bytes 'bytes24)
  ("\\bbytes25\\b" '%fixed-bytes 'bytes25)
  ("\\bbytes26\\b" '%fixed-bytes 'bytes26)
  ("\\bbytes27\\b" '%fixed-bytes 'bytes27)
  ("\\bbytes28\\b" '%fixed-bytes 'bytes28)
  ("\\bbytes29\\b" '%fixed-bytes 'bytes29)
  ("\\bbytes30\\b" '%fixed-bytes 'bytes30)
  ("\\bbytes31\\b" '%fixed-bytes 'bytes31)
  ("\\bbytes32\\b" '%fixed-bytes 'bytes32)
  ("\\bstring\\b"   '%string  'string)
  ("\\bbytes\\b"    '%bytes   'bytes)
  ("\\bfixed\\b"    '%fixed   'fixed)
  ("\\bufixed\\b"   '%ufixed  'ufixed)
  ("\\bbool\\b"     '%bool    'bool)
  ("\\baddress\\b"  '%address 'address)
  ("\\payable\\b"   '%payable 'payable)
  ("\\bunchecked\\b" '%unchecked 'unchecked)
  ("\\bconstructor\\b" '%constructor 'constructor)
  ("\\binterface\\b" '%interface 'interface)
  ("\\bmodifier\\b" '%modifier 'modifier)
  ("\\bfallback\\b" '%fallback 'fallback)
  ("\\breceive\\b" '%receive 'receive)
  ("\\bstruct\\b" '%struct 'struct)
  ("\\berror\\b" '%error 'error)
  ("\\bimmutable\\b" '%immutable 'immutable)
  ("\\bif\\b" '%if '%if)
  ("\\belse\\b" '%else '%else)
  ("\\bfor\\b" '%for 'for)
  ("\\bwhile\\b" '%while '%while)
  ("\\bdo\\b" '%do '%do)
  ("\\bcontinue\\b" '%continue '%continue)
  ("\\bbreak\\b" '%break '%break)
  ("\\btry\\b" '%try '%try)
  ("\\bcatch\\b" '%catch '%catch)
  ("\\breturn\\b" '%return '%return)
  ("\\bemit\\b" '%emit '%emit)
  ("\\brevert\\b" '%revert '%revert)
  ("\\bassembly\\b" '%assembly '%assembly)
  ("\"evmasm\"" '%evmasm '%evmasm)
  ("\\bleave\\b" '%leave 'leave)
  ("\\blet\\b" '%let 'let)
  ;; ("\\bstop\\b" '%asm-command 'stop)
  ;; ("\\bsdiv\\b" '%asm-command 'sdiv)
  ;; ("\\bmod\\b" '%asm-command 'mod)
  ;; ("\\bsmod\\b" '%asm-command 'smod)
  ;; ("\\bexp\\b" '%asm-command 'exp)
  ;; ("\\bnot\\b" '%asm-command 'not)
  ;; ("\\blt\\b" '%asm-command 'lt)
  ;; ("\\bgt\\b" '%asm-command 'gt)
  ;; ("\\bslt\\b" '%asm-command 'slt)
  ;; ("\\bsgt\\b" '%asm-command 'sgt)
  ;; ("\\beq\\b" '%asm-command 'eq)
  ;; ("\\biszero\\b" '%asm-command 'iszero)
  ;; ("\\band\\b" '%asm-command 'and)
  ;; ("\\bor\\b" '%asm-command 'or)
  ;; ("\\bxor\\b" '%asm-command 'xor)
  ;; ("\\bshl\\b" '%asm-command 'shl)
  ;; ("\\bshr\\b" '%asm-command 'shr)
  ;; ("\\bsar\\b" '%asm-command 'sar)
  ;; ("\\bsignextend\\b" '%asm-command 'signextend)
  ;; ("\\bpop\\b" '%asm-command 'pop)
  ;; ("\\bmload\\b" '%asm-command 'mload)
  ;; ("\\bmstore\\b" '%asm-command 'mstore)
  ;; ("\\bmstore8\\b" '%asm-command 'mstore8)
  ;; ("\\bsload\\b" '%asm-command 'sload)
  ;; ("\\bsstore\\b" '%asm-command 'sstore)
  ;; ("\\bmsize\\b" '%asm-command 'msize)
  ;; ("\\bgas\\b" '%asm-command 'gas)
  ;; ("\\bselfbalance\\b" '%asm-command 'selfbalance)
  ;; ("\\bcaller\\b" '%asm-command 'caller)
  ;; ("\\bcallvalue\\b" '%asm-command 'callvalue)
  ;; ("\\bcalldataload\\b" '%asm-command 'calldataload)
  ;; ("\\bcalldatasize\\b" '%asm-command 'calldatasize)
  ;; ("\\bcalldatacopy\\b" '%asm-command 'calldatacopy)
  ;; ("\\bextcodesize\\b" '%asm-command 'extcodesize)
  ;; ("\\bextcodecopy\\b" '%asm-command 'extcodecopy)
  ;; ("\\breturndatasize\\b" '%asm-command 'returndatasize)
  ;; ("\\breturndatacopy\\b" '%asm-command 'returndatacopy)
  ;; ("\\bextcodehash\\b" '%asm-command 'extcodehash)
  ;; ("\\bcreate\\b" '%asm-command 'create)
  ;; ("\\bcreate2\\b" '%asm-command 'create2)
  ;; ("\\bcallcode\\b" '%asm-command 'callcode)
  ;; ("\\bbyte\\b" '%asm-command 'byte)
  ;; ("\\bselfdestruct\\b" '%asm-command 'selfdestruct)
  ;; ("\\binvalid\\b" '%asm-command 'invalid)
  ;; ("\\blog0\\b" '%asm-command 'log0)
  ;; ("\\blog1\\b" '%asm-command 'log1)
  ;; ("\\blog2\\b" '%asm-command 'log2)
  ;; ("\\blog3\\b" '%asm-command 'log3)
  ;; ("\\blog4\\b" '%asm-command 'log4)
  ;; ("\\bchainid\\b" '%asm-command 'chainid)
  ;; ("\\borigin\\b" '%asm-command 'origin)
  ;; ("\\bgasprice\\b" '%asm-command 'gasprice)
  ;; ("\\bblockhash\\b" '%asm-command 'blockhash)
  ;; ("\\bcoinbase\\b" '%asm-command 'coinbase)
  ;; ("\\btimestamp\\b" '%asm-command 'timestamp)
  ;; ("\\bnumber\\b" '%asm-command 'number)
  ;; ("\\bdifficulty\\b" '%asm-command 'difficulty)
  ;; ("\\bgaslimit\\b" '%asm-command 'gaslimit)
  ;; ("\\bbasefee\\b" '%asm-command 'basefee)
  ;; ("\\btrue\\b" '%yul-bool-lit 'true)
  ;; ("\\bfalse\\b" '%yul-bool-lit 'false)
  ("\\bswitch\\b" '%switch 'switch)
  ("\\bcase\\b" '%case 'case)
  ("\\bdefault\\b" '%default 'default)
  ;; ("0x[a-fA-F0-9]{40}" '%addr $@)
  ("0x[a-fA-F0-9]+" '%addr $@)
  ("\\btype\\b" '%type 'type)
  ("\\bdelete\\b" '%delete '%delete)
  
  ;; ("\\bkeccak256\\b"  '%built-in-func 'keccak256)
  ;; ("\\addmod\\b" '%built-in-func 'addmod)
  ;; ("\\mulmod\\b" '%built-in-func 'mulmod)
  ;; ("\\balance\\b" '%built-in-func 'balance)
  ;; ("\\call\\b" '%built-in-func 'call)
  ;; ("\\staticcall\\b" '%built-in-func 'staticcall)
  ;; ("\\delegatecall\\b" '%built-in-func 'delegatecall)
  ;; ("\\badd\\b" '%built-in-func 'add)
  ;; ("\\bsub\\b" '%built-in-func 'sub)
  ;; ("\\bmul\\b" '%built-in-func 'mul)
  ;; ("\\bdiv\\b" '%built-in-func 'div)
  
  
  ("[>]{3}[=]{1}" '|%>>>=| '|%>>>=|)
  ("[>]{3}" '|%>>>| '|%>>>|)
  ("[>]{2}[=]{1}" '|%>>=| '|%>>=|)
  ("[>]{1}[=]{1}" '|%>=| '|%>=|)
  
  ("[<]{1}[=]{1}" '|%<=| '|%<=|)
  ("[!]{1}[=]{1}" '|%!=| '|%!=|)
  ("[|]{1}[=]{1}" '|%pipe=| '|%pipe=|)
  ("[\\^]{1}[=]{1}" '|%^=| '|%^=|)
  ("[&]{1}[=]{1}" '|%&=| '|%&=|)
  ("[<]{2}[=]{1}" '|%<<=| '|%<<=|)
  
  ("[\\+]{1}[=]{1}" '|%+=| '|%+=|)
  ("[-]{1}[=]{1}" '|%-=| '|%-=|)
  ("[\\*]{1}[=]{1}" '|%*=| '|%*=|)
  ("[/]{1}[=]{1}" '|%/=| '|%/=|)
  ("[%]{1}[=]{1}" '|%%=| '|%%=|)
  ("[-]{1}[>]{1}" '|%->| '|%->|)
  
  ("[*]{2}" '|%**| '|%**|)
  ("[>]{2}" '|%>>| '|%>>|)
  ("[<]{2}" '|%<<| '|%<<|)
  ("[=]{2}" '|%==| '|%==|)
  ("[&]{2}" '|%&&| '|%&&|)
  ("[|]{2}" '|%pipepipe| '|%pipepipe|)
  ("[+]{2}" '|%++| '|%++|)
  ("[-]{2}" '|%--| '|%--|)
  
  ;; (":=" '|%:=| '|%:=|)
  ("[=]{1}" '|%=| '|%=|)
  ("[|]{1}" '|%pipe| '|%pipe|)
  ("[&]{1}" '|%&| '|%&|)
  ("[!]{1}" '|%!| '|%!|)
  ("[~]{1}" '|%~| '|%~|)
  ("[-]{1}" '|%-| '|%-|)
  ("[+]{1}" '|%+| '|%+|)
  ("[*]{1}" '|%*| '|%*|)
  ("[/]{1}" '|%/| '|%/|)
  ("[%]{1}" '|%%| '|%%|)
  ("[\\^]{1}" '|%^| '|%^|)
  ("[<]{1}" '|%<| '|%<|)
  ("[>]{1}" '|%>| '|%>|)
  ("[\\?]{1}" '|%?|  '|%?|)
  ("\\[" '|%[| '|[|)
  ("\\]" '|%]| '|]|)
  ("\\." '|%.| '|.|)
  
  ("\\bnew\\b" '%new 'new)
  
  ;; (cl-ppcre:all-matches-as-strings
  ;;  "[|]{1}"
  ;;  "a|b");
  ("\\btrue\\b" '%bool-lit 'true)
  ("\\bfalse\\b" '%bool-lit 'false)
  ("\\b[a-zA-Z$_]+[a-zA-Z0-9$_]*\\b" '%identifier $@)
  ;; ("\\b[a-zA-Z$_]+[a-zA-Z0-9$_]*\\b" '%yul-identifier $@)
  ;; ("\\b[0-9]+\\b" '%yul-dec-lit $@)
  ;; ("\\b0x[0-9A-Fa-f]+\\b" '%yul-hex-num $@)
  ("\'\'" '%single-quoted-printable-empty $@)
  ("\"\"" '%double-quoted-printable-empty $@)
  ("\'[\u0020-\u0026\u0028-\u005B\u005D-\u007E:\s]+\'" '%single-quoted-printable $@)
  ("[\"](.)*[\"]" '%double-quoted-printable $@)
  ("\\b[0-9_]+\\b" '%dec_num_v1 $@)
  ;; ("\\b[0-9_]+\\\\.[0-9_]+\\b" '%dec_num_v2 $@)
  ;; ("\\b[0-9_]+[eE]+[-]*[0-9_]+\\b" '%dec_num_v3 $@)
  ;; ("\\b[0-9_]+\\\\.[0-9_]+[eE]+[-]*[0-9_]+\\b" '%dec_num_v4 $@)
  ("\\b0x[0-9A-Fa-f_]+\\b" '%hex_num_v1 $@)
  ("\"\b0x[0-9A-Fa-f_]+\"\b" '%hex_num_v2 $@)
  ("\'\b0x[0-9A-Fa-f_]+\'\b" '%hex_num_v3 $@)
  )
