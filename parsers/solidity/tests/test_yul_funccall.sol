contract test_empty_yul_block
{
    function fn_yul_funccall (uint p_one) returns (uint r_one) {
        assembly {
                    some(obj.IsOk)
                        stop(add(smth))
                        add()
                        sub()
                        mul()
                        div()
                        sdiv()
                        mod()
                        smod()
                        exp()
                        not()
                        lt(not())
                        gt()
                        slt()
                        sgt()
                        eq()
                        iszero()
                        and()
                        or()
                        xor(obj.IsOk)
                        shl()
                        shr()
                        sar()
                        addmod()
                        mulmod()
                        signextend()
                        keccak256(obj.IsOk)
                        pop()
                        mload()
                        mstore()
                        mstore8()
                        sload()
                        sstore()
                        msize()
                        gas()
                        balance()
                        selfbalance()
                        caller()
                        callvalue()
                        calldataload()
                        calldatasize()
                        calldatacopy()
                        extcodesize()
                        extcodecopy()
                        returndatasize()
                        returndatacopy()
                        extcodehash(smth1, smth2)
                        create()
                        create2()
                        call()
                        callcode()
                        delegatecall()
                        staticcall()
                        return()
                        byte()
                        revert()
                        selfdestruct()
                        invalid()
                        log0()
                        log1()
                        log2()
                        log3()
                        log4()
                        chainid()
                        origin()
                        gasprice()
                        blockhash()
                        coinbase()
                        timestamp()
                        number()
                        difficulty()
                        gaslimit()
                        basefee()
                 }
    }
}
